// Signature file for parser generated by fsyacc
module AlgoMoveTranspiler.Parser
type token = 
  | EOF
  | MODULE
  | STRUCT
  | HAS
  | COPY
  | DROP
  | KEY
  | STORE
  | PUBLIC
  | ENTRY
  | TU64
  | TBOOL
  | TADDRESS
  | AMP
  | AMPMUT
  | BRA
  | KET
  | SQBRA
  | SQKET
  | CURBRA
  | CURKET
  | COLON
  | SEMICOLON
  | DOT
  | COMMA
  | MOVLOC
  | CPYLOC
  | STLOC
  | ID of (System.String)
  | UINT64 of (System.UInt64)
type tokenId = 
    | TOKEN_EOF
    | TOKEN_MODULE
    | TOKEN_STRUCT
    | TOKEN_HAS
    | TOKEN_COPY
    | TOKEN_DROP
    | TOKEN_KEY
    | TOKEN_STORE
    | TOKEN_PUBLIC
    | TOKEN_ENTRY
    | TOKEN_TU64
    | TOKEN_TBOOL
    | TOKEN_TADDRESS
    | TOKEN_AMP
    | TOKEN_AMPMUT
    | TOKEN_BRA
    | TOKEN_KET
    | TOKEN_SQBRA
    | TOKEN_SQKET
    | TOKEN_CURBRA
    | TOKEN_CURKET
    | TOKEN_COLON
    | TOKEN_SEMICOLON
    | TOKEN_DOT
    | TOKEN_COMMA
    | TOKEN_MOVLOC
    | TOKEN_CPYLOC
    | TOKEN_STLOC
    | TOKEN_ID
    | TOKEN_UINT64
    | TOKEN_end_of_input
    | TOKEN_error
type nonTerminalId = 
    | NONTERM__startmodulee
    | NONTERM_modulee
    | NONTERM_structs
    | NONTERM_structt
    | NONTERM_fields
    | NONTERM_funs
    | NONTERM_funn
    | NONTERM_arg
    | NONTERM_args
    | NONTERM_body
    | NONTERM_bodyline
    | NONTERM_quals
    | NONTERM_qual
    | NONTERM_return_ty
    | NONTERM_ty
    | NONTERM_capabs
    | NONTERM_capab
    | NONTERM_qid
    | NONTERM_label
    | NONTERM_loc
    | NONTERM_opcode
/// This function maps tokens to integer indexes
val tagOfToken: token -> int

/// This function maps integer indexes to symbolic token ids
val tokenTagToTokenId: int -> tokenId

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
val prodIdxToNonTerminal: int -> nonTerminalId

/// This function gets the name of a token as a string
val token_to_string: token -> string
val modulee : (FSharp.Text.Lexing.LexBuffer<'cty> -> token) -> FSharp.Text.Lexing.LexBuffer<'cty> -> ( AlgoMoveTranspiler.Absyn.Module ) 
